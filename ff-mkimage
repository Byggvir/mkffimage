#!/bin/bash
# Thomas Arend
# 03.10.2016

# Erstellen eines Freifunk Image unter Debian

NUM_CORES_PLUS_ONE=$(expr $(nproc) + 1)

DIALOG='kdialog --title Make-FF-Images'

GLUONGIT="https://github.com/freifunk-gluon/gluon.git"
GLUONDIR=`$DIALOG --inputbox GLUONDIR "$HOME/gluon"`
GLUONVER=`$DIALOG --inputbox GLUONVER "master"`

# Additional packages for Rheinbach

GLUONRHBPACKAGES="https://github.com/Byggvir/ff-rhb-packages.git"

# Site packages

SITEGIT=`$DIALOG --inputbox SITEGIT "https://github.com/Byggvir/ff-rhb-site-l2tp.git"`
SITEVER=`$DIALOG --inputbox SITEVER ${GLUONVER}`

BRANCH=`$DIALOG --inputbox BRANCH stable`

GLUON_RELEASE=`$DIALOG --inputbox GLUON_RELEASE "${GLUONVER}-$(date '+%Y%m%d')-${BRANCH}"`

$DIALOG --yesno "Quick build?"
QUICK="$?"



TARGETS="ar71xx-generic ar71xx-mikrotik ar71xx-nand ar71xx-tiny brcm2708-bcm2708 brcm2708-bcm2709 brcm2708-bcm2710 generic ipq40xx ipq806x mpc85xx-generic mvebu-cortexa9 ramips-mt7620 ramips-mt7621 ramips-mt76x8 ramips-rt305x sunxi-cortexa7 x86-64 x86-generic x86-geode" 
#TARGETS="ar71xx-generic ar71xx-tiny ar71xx-nand brcm2708-bcm2708 brcm2708-bcm2709 mpc85xx-generic x86-generic x86-geode x86-64 ramips-mt7620 ramips-mt7621 ramips-mt7628 ramips-rt305x" 
#TARGETS="ar71xx-tiny" 

echo "VERSION (gluon): $GLUONVER"
echo "VERSION (site): $SITEVER"
echo "BRANCH: $BRANCH"

#----- Functions -----

function cleantarget () {

  make clean GLUON_TARGET="$1" GLUON_RELEASE="$GLUON_RELEASE" >/tmp/${GLUONVER}-mkffimage-$1-a.log 2>&1

}

function maketarget () {

  make -j$NUM_CORES_PLUS_ONE V=s GLUON_TARGET="$1" GLUON_RELEASE="$GLUON_RELEASE" >/tmp/${GLUONVER}-mkffimage-$1-b.log 2>&1

}

if [ $QUICK = 1 ]
then

if [ ! -d "${GLUONDIR}/${GLUONVER}" ]
then
### Verzeichnis existiert noch nicht ###
  pushd "${GLUONDIR}"
  git clone -b ${GLUONVER} ${GLUONGIT} ${GLUONVER} 
  popd
else 

### Verzeichnis vorhanden, auffrischen ###
  pushd "${GLUONDIR}/${GLUONVER}"
  git pull
  popd
fi

### ---
# Replace gluon-wan-dnsmasq with modified / additional RHB packages

pushd "${GLUONDIR}/${GLUONVER}"

rm -r ./package/gluon-wan-dnsmasq
git clone -b master "${GLUONRHBPACKAGES}" ff-rhb-packages

  pushd ff-rhb-packages
  for D in * 
  do
    [ -d "$D" ] && cp -r "${D}" "../package/" 
  done 
  popd

### Wir brauchen noch die Site Infos ###


if [ ! -d site ]
then 
  git clone -b "${SITEVER}" "${SITEGIT}" site 
else
  pushd site
  git pull ### "${SITEGIT}" ${SITEVER}
  popd
fi

### Alte Log-Dateien lÃ¶schen ###

rm /tmp/${GLUONVER}-mkffimage*.log

### Alles bereit um die Firmware zu erstellen ###

make update >/tmp/${GLUONVER}-mkffimage.log 2>&1

else

pushd "${GLUONDIR}/${GLUONVER}"

fi ## QUICK

for TARGET in ${TARGETS}
do
  [ $QUICK = 0 ] || cleantarget  ${TARGET}
  maketarget ${TARGET}

done

make manifest GLUON_BRANCH=${BRANCH} GLUON_RELEASE="$GLUON_RELEASE" GLUON_PRIORITY=1
./contrib/sign.sh $HOME/.ecdsa/thomas.secret output/images/sysupgrade/${BRANCH}.manifest

popd
