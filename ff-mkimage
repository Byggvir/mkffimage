#!/bin/bash
# Thomas Arend
# 03.10.2016

# Um den Prozess stoppen zu können
echo PID=$$

# Erstellen eines Freifunk Image unter Debian

TMPDIR=`mktemp -d`

NUM_CORES_PLUS_ONE=$(expr $(nproc) + 1)
#NUM_CORES_PLUS_ONE=1

DIALOG='kdialog --title Make-FF-Images'

GLUONGIT="https://github.com/freifunk-gluon/gluon.git"

GLUONDIR=`$DIALOG --inputbox GLUONDIR "$HOME/gluon/multi-domain"`
GLUONVER=`$DIALOG --inputbox GLUONVER "v2018.2.x"`

# Additional packages for Rheinbach

GLUONRHBPACKAGES="https://github.com/Byggvir/ff-rhb-packages.git"

# Site packages

SITEGIT=`$DIALOG --inputbox SITEGIT "git@github.com:Byggvir/multi-domain.git"`
## SITEVER=`$DIALOG --inputbox SITEVER ${GLUONVER}`
SITEVER=`$DIALOG --inputbox SITEVER 'master'`

BRANCH=`$DIALOG --inputbox BRANCH testing`

GLUON_RELEASE=`$DIALOG --inputbox GLUON_RELEASE "${GLUONVER}-$(date '+%Y%m%d')-${BRANCH}"`

$DIALOG --yesno "Quick build?"
QUICK="$?"


#  Targets inklusive BROKEN=1
#
#  * ar71xx-generic
#  * ar71xx-tiny
#  * ar71xx-nand
#  * brcm2708-bcm2708
#  * brcm2708-bcm2709
#  * mpc85xx-generic
#  * ramips-mt7621
#  * sunxi-cortexa7
#  * x86-generic
#  * x86-geode
#  * x86-64
#  * ipq40xx
#  * ramips-mt7620
#  * ramips-mt76x8
#  * ramips-rt305x
#  * ar71xx-mikrotik
#  * brcm2708-bcm2710
#  * ipq806x
#  * mvebu-cortexa9

# Mit BROKEN targets

TARGETS="ar71xx-generic ar71xx-tiny ar71xx-nand brcm2708-bcm2708 brcm2708-bcm2709 mpc85xx-generic ramips-mt7621 sunxi-cortexa7 x86-generic x86-geode x86-64 ipq40xx ramips-mt7620 ramips-mt76x8 ramips-rt305x ar71xx-mikrotik brcm2708-bcm2710 ipq806x mvebu-cortexa9" 

# Ohne BROKEN targets
#TARGETS="ar71xx-generic ar71xx-tiny ar71xx-nand brcm2708-bcm2708 brcm2708-bcm2709 mpc85xx-generic ramips-mt7621 sunxi-cortexa7 x86-generic x86-geode x86-64 ipq40xx ramips-mt7620 ramips-mt76x8 ramips-rt305x"

#TARGETS="ar71xx-generic" 

LIST=$(echo $TARGETS | sed 's#\([^ ]*\)#\1 \1 off#g')

TARGETS=`$DIALOG --checklist Targets $LIST | sed 's#"##g'`

echo "VERSION (gluon): $GLUONVER"
echo "VERSION (site): $SITEVER"
echo "BRANCH: $BRANCH"

#----- Functions -----

function cleantarget () {

  make clean GLUON_BRANCH="$BRANCH"  GLUON_TARGET="$1" GLUON_RELEASE="$GLUON_RELEASE" >$TMPDIR/${GLUONVER}-mkffimage-$1-a.log 2>&1

}

function maketarget () {

  make -j$NUM_CORES_PLUS_ONE V=s BROKEN=1 GLUON_BRANCH="$BRANCH" GLUON_TARGET="$1" GLUON_RELEASE="$GLUON_RELEASE" >$TMPDIR/${GLUONVER}-mkffimage-$1-b.log 2>&1

}

if [ $QUICK = 1 ]
then

if [ ! -d "${GLUONDIR}/${GLUONVER}" ]
then
### Verzeichnis existiert noch nicht ###
  pushd "${GLUONDIR}"
  git clone -b ${GLUONVER} ${GLUONGIT} ${GLUONVER} 
  popd
else 

### Verzeichnis vorhanden, auffrischen ###
  pushd "${GLUONDIR}/${GLUONVER}"
  git pull
  popd
fi

### ---
# Replace gluon-wan-dnsmasq with modified / additional RHB packages

pushd "${GLUONDIR}/${GLUONVER}"

#rm -r ./package/gluon-wan-dnsmasq
#git clone -b master "${GLUONRHBPACKAGES}" ff-rhb-packages
#
#  pushd ff-rhb-packages
#  for D in * 
#  do
#    [ -d "$D" ] && cp -r "${D}" "../package/" 
#  done 
#  popd
#

### Wir brauchen noch die Site Infos ###


if [ ! -d site ]
then 
  git clone -b "${SITEVER}" "${SITEGIT}" site 
else
  pushd site
  git pull ### "${SITEGIT}" ${SITEVER}
  popd
fi

### Alte Log-Dateien löschen ###

##rm $TMPDIR/${GLUONVER}-mkffimage*.log

### Alles bereit um die Firmware zu erstellen ###

make update >$TMPDIR/${GLUONVER}-mkffimage.log 2>&1

else

pushd "${GLUONDIR}/${GLUONVER}"

fi ## QUICK

for TARGET in ${TARGETS}
do
  [ $QUICK = 0 ] || cleantarget  ${TARGET}
  maketarget ${TARGET}

done

make manifest GLUON_BRANCH=${BRANCH} GLUON_RELEASE="$GLUON_RELEASE" GLUON_PRIORITY=1
./contrib/sign.sh $HOME/.ecdsa/thomas.secret output/images/sysupgrade/${BRANCH}.manifest

popd
